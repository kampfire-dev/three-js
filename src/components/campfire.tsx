/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ../../public/models/Campfire 3D Model.glb -t -o campfire-new.tsx -k 
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import React from "react";

type GLTFResult = GLTF & {
  nodes: {
    campfire: THREE.Mesh;
  };
  materials: {
    None: THREE.MeshStandardMaterial;
  };
};

const Campfire = React.forwardRef<THREE.Mesh, JSX.IntrinsicElements["group"]>(
  ({ ...props }, ref) => {
    const { nodes, materials } = useGLTF(
      "/models/Campfire 3D Model.glb"
    ) as GLTFResult;
    return (
      <group {...props} dispose={null} layers={10}>
        <mesh
          name="campfire"
          geometry={nodes.campfire.geometry}
          material={materials.None}
          ref={ref}
        />
      </group>
    );
  }
);
Campfire.displayName = "Campfire";

export { Campfire };
